#eerst kijken naar hoe we de data creÃ«eren van de kaarten
  #atributen zijn aantal (1-3), kleur (blauw, groen, rood), vulling (leeg, streepjes, vol) en vorm (wave, rond, hoekig)
# kijken hoe we deze kaarten kunnen weergeven ( symbolen of foto's?)
  #en kijken hoe we ze kunnen weghalen en weer terug "leggen"
# Een manier vinden voor menselijke input op deze kaarten

# een algoritme scrijven die zelf een set kan vinden, en de input van de mens kan verifieren
  #en een timer maken die wacht op de speler


#poging 2
import random
import itertools
import numpy 

class Kaart:
    def __init__(self, aantal, kleur, vorm, vulling):
        self.aantal = aantal
        self.kleur = kleur
        self.vorm = vorm
        self.vulling = vulling

    def is_set(self, kaart2):
        if (self.aantal == kaart2.aantal) or (self.aantal != kaart2.aantal):
            if (kaart2.kleur == self.kleur) or (kaart2.kleur != self.kleur):
                if (kaart2.vorm == self.vorm) or (kaart2.vorm != self.vorm):
                    if (kaart2.vulling == self.vulling) or (kaart2.vulling != self.vulling):
                        return True
        return False
    
    def geef_willekeurige_kaart(stack_kaarten):
        willekeurige_kaart = random.choice(stack_kaarten)
        return willekeurige_kaart
    
    def is_set_helemaal(kaart1, kaart2, kaart3):
        return kaart1.is_set(kaart2) and kaart1.is_set(kaart3) and kaart2.is_set(kaart3)
    
class Speelveld:
    def __init__(self):
        self.veld = []
        self.stack_kaarten = list(itertools.product((0,1,2), repeat=4))
    
    def maak_speelveld(self):
        self.veld = random.choice(self.stack_kaarten, 12)

    def zoek_set(self):
            mogelijke_sets = []
            for i in range(len(self.veld)):
                for j in range(i + 1, len(self.veld)):
                    for k in range(j + 1, len(self.veld)):
                        kaart1 = self.veld[i]
                        kaart2 = self.veld[j]
                        kaart3 = self.veld[k]
                        if Kaart.is_set_helemaal(kaart1, kaart2, kaart3):
                            mogelijke_sets.append([kaart1,kaart2,kaart3])
            return mogelijke_sets

    def extra_kaarten_speelveld(self):
        self.veld += [Kaart(*Kaart.geef_willekeurige_kaart(self.stack_kaarten)) for _ in range(3)]
        return self.veld

class SetGame:
    def __init__(self, ):
        return ...
    def set_found(kaart1, kaart2, kaart3):
        
        return ...
    def visualize_game():
        return...

